@if (Todo is not null)
{
    <div class="hstack gap-2 align-items-center">

        <div>
            <InputCheckbox @bind-Value="Todo.IsComplete" 
            class="form-check-input" @bind-Value:after="UpdateTodo"></InputCheckbox>
        </div>
        <div class="flex-grow-1 @(Todo.IsComplete == true ? "text-decoration-line-through" : "")"> @*ternary statement*@
            @Todo.Name
        </div>
        <div>
            <a href="tasker/edit/@Todo.Id" class="btn btn-secondary btn-sm">
                <i class="bi bi-pencil"></i>
            </a>
            <button class="btn btn-danger btn-sm" @onclick="DeleteTodo">
                <i class="bi bi-trash-fill"></i>
            </button>
        </div>

    </div>
}
@code {

    private UserInfo? userInfo;

    [CascadingParameter]

    private Task<AuthenticationState>? AuthStateTask { get; set; }

    [Parameter, EditorRequired]
    public TaskerItemDTO? Todo { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<TaskerItemDTO> OnDelete { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<TaskerItemDTO> OnUpdate { get; set; }

    private async Task DeleteTodo()
    {
        await OnDelete.InvokeAsync(Todo);
    }

    private async Task UpdateTodo() //ask chatgpt or youtube how async works
    {
        await OnUpdate.InvokeAsync(Todo);
    }
}

